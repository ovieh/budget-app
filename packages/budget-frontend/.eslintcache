[{"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/BottomNavigation.tsx":"1","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Transactions.tsx":"2","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Layout.tsx":"3","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/accessToken.ts":"4","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ListItemLink.tsx":"5","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Expenses.tsx":"6","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/FileUpload.tsx":"7","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Categories/Categories.tsx":"8","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Routes.tsx":"9","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/PieChart/PieChart.tsx":"10","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Drawer.tsx":"11","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ReusableList.tsx":"12","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/TablePlaceholder/TablePlaceholder.tsx":"13","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/TransactionsTable.tsx":"14","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/App.tsx":"15","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/colors.ts":"16","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/RenderArrow.tsx":"17","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Contexts/ActiveDate.ts":"18","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Categories/components/CategoriesTable.tsx":"19","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Panel.tsx":"20","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/GlobalFilter.tsx":"21","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/types/currency.ts":"22","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/BarChart/BarChart.tsx":"23","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ReusableNav.tsx":"24","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/LoggedOutNav.tsx":"25","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/index.tsx":"26","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/apollo-link.ts":"27","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/cache.ts":"28","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Contexts/ProvideAuth.tsx":"29","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Register.tsx":"30","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/SignIn.tsx":"31","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/hooks/use-state-with-local-storage.ts":"32","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/generated/graphql.tsx":"33","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/PrimaryList.tsx":"34","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/LoggedInNav.tsx":"35","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/DashboardContext.tsx":"36","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Income.tsx":"37","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/TransactionForm/TransactionForm.tsx":"38","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/EditableCell.tsx":"39","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/ReusableTable.tsx":"40","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/TableToolbar.tsx":"41"},{"size":1053,"mtime":1607194771740,"results":"42","hashOfConfig":"43"},{"size":3949,"mtime":1607366362095,"results":"44","hashOfConfig":"43"},{"size":2130,"mtime":1607190878340,"results":"45","hashOfConfig":"43"},{"size":160,"mtime":1605957432627,"results":"46","hashOfConfig":"43"},{"size":943,"mtime":1607160640247,"results":"47","hashOfConfig":"43"},{"size":1363,"mtime":1606062634449,"results":"48","hashOfConfig":"43"},{"size":2306,"mtime":1606065195806,"results":"49","hashOfConfig":"43"},{"size":5611,"mtime":1607190878340,"results":"50","hashOfConfig":"43"},{"size":1107,"mtime":1607612231830,"results":"51","hashOfConfig":"43"},{"size":1775,"mtime":1605519880128,"results":"52","hashOfConfig":"43"},{"size":2638,"mtime":1606155414885,"results":"53","hashOfConfig":"43"},{"size":517,"mtime":1605345010099,"results":"54","hashOfConfig":"43"},{"size":470,"mtime":1605345010682,"results":"55","hashOfConfig":"43"},{"size":2488,"mtime":1607366434529,"results":"56","hashOfConfig":"43"},{"size":1429,"mtime":1607087926491,"results":"57","hashOfConfig":"43"},{"size":194,"mtime":1605519854587,"results":"58","hashOfConfig":"43"},{"size":784,"mtime":1606062634449,"results":"59","hashOfConfig":"43"},{"size":817,"mtime":1606064460339,"results":"60","hashOfConfig":"43"},{"size":2066,"mtime":1606778404109,"results":"61","hashOfConfig":"43"},{"size":1766,"mtime":1606665086170,"results":"62","hashOfConfig":"43"},{"size":2411,"mtime":1605957432627,"results":"63","hashOfConfig":"43"},{"size":56,"mtime":1605957432630,"results":"64","hashOfConfig":"43"},{"size":2690,"mtime":1605523750979,"results":"65","hashOfConfig":"43"},{"size":2868,"mtime":1607612954205,"results":"66","hashOfConfig":"43"},{"size":316,"mtime":1605345008869,"results":"67","hashOfConfig":"43"},{"size":988,"mtime":1607087926494,"results":"68","hashOfConfig":"43"},{"size":2688,"mtime":1606071047671,"results":"69","hashOfConfig":"43"},{"size":108,"mtime":1607362587673,"results":"70","hashOfConfig":"43"},{"size":1159,"mtime":1607612689729,"results":"71","hashOfConfig":"43"},{"size":3358,"mtime":1605345010099,"results":"72","hashOfConfig":"43"},{"size":4012,"mtime":1605453918720,"results":"73","hashOfConfig":"43"},{"size":591,"mtime":1606588155737,"results":"74","hashOfConfig":"43"},{"size":47392,"mtime":1607173024696,"results":"75","hashOfConfig":"43"},{"size":478,"mtime":1605345010099,"results":"76","hashOfConfig":"43"},{"size":1424,"mtime":1607613804307,"results":"77","hashOfConfig":"43"},{"size":3952,"mtime":1606665517066,"results":"78","hashOfConfig":"43"},{"size":1113,"mtime":1606062634449,"results":"79","hashOfConfig":"43"},{"size":5809,"mtime":1607365927919,"results":"80","hashOfConfig":"43"},{"size":2470,"mtime":1607366289599,"results":"81","hashOfConfig":"43"},{"size":4606,"mtime":1606062634449,"results":"82","hashOfConfig":"43"},{"size":1372,"mtime":1605957432627,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"oug306",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/BottomNavigation.tsx",[],["174","175"],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Transactions.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Layout.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/accessToken.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ListItemLink.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Expenses.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/FileUpload.tsx",["176","177"],"import React, { useContext, useRef, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { getAccessToken } from '../accessToken';\nimport { useTransactionsByMonthAndYearLazyQuery } from '../generated/graphql';\nimport { ActiveDateContext } from '../Contexts/ActiveDate';\n\ninterface Props {}\n\nexport const FileUpload: React.FC<Props> = () => {\n    const ref = useRef(null);\n    const URL = `${process.env.REACT_APP_API_URL}`;\n\n    const onUploadButtonClick = () => (ref as any).current.click();\n\n    const {\n        store: { activeDate },\n    } = useContext(ActiveDateContext);\n\n    const accessToken = getAccessToken();\n    const [loading, setLoading] = useState('idle');\n    const [getTransactions, { data }] = useTransactionsByMonthAndYearLazyQuery();\n\n    const fileUpload = (file: any): any => {\n        const formData = new FormData();\n        formData.append('file', file);\n        setLoading('fetching');\n        accessToken &&\n            fetch(`${URL}/fileupload`, {\n                method: 'POST',\n                credentials: 'include',\n                body: formData,\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            })\n                .then(response => {\n                    setLoading('idle');\n                    const result = response.json();\n                    if (result) {\n                        getTransactions({\n                            variables: { year: activeDate?.year, month: activeDate?.month },\n                        });\n\n                        console.log(data);\n                    }\n                })\n                .catch(error => {\n                    setLoading('idle');\n\n                    console.log(error);\n                });\n    };\n\n    return (\n        <>\n            <Button\n                variant='contained'\n                style={{ marginTop: '10px' }}\n                fullWidth\n                onClick={onUploadButtonClick}\n                type='submit'\n                disabled={loading === 'fetching'}\n            >\n                Upload File\n            </Button>\n            <div style={{ display: 'none' }}>\n                <input ref={ref} onChange={(e: any) => fileUpload(e.target.files[0])} type='file' />\n            </div>\n        </>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Categories/Categories.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Routes.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/PieChart/PieChart.tsx",["178"],"import React from 'react';\nimport {\n    ResponsiveContainer,\n    PieChart as RePieChart,\n    PieChartProps,\n    Pie,\n    Cell,\n    PieLabelRenderProps,\n    ContentRenderer,\n    Tooltip,\n    Legend,\n} from 'recharts';\nimport COLORS from '../colors';\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel: ContentRenderer<PieLabelRenderProps> = ({\n    cx = 0,\n    cy = 0,\n    midAngle = 0,\n    innerRadius = 0,\n    outerRadius = 0,\n    percent = 0,\n    index,\n}) => {\n    cx = Number(cx);\n    cy = Number(cy);\n    innerRadius = Number(innerRadius);\n    outerRadius = Number(outerRadius);\n\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle! * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text\n            x={x}\n            y={y}\n            fill='white'\n            textAnchor={x > cx ? 'start' : 'end'}\n            dominantBaseline='central'\n        >\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nexport const PieChart: React.FC<PieChartProps> = ({ data }) => {\n    return (\n        <ResponsiveContainer>\n            <RePieChart margin={{ top: 5, right: 5, bottom: 5, left: 5 }}>\n                <Pie\n                    data={data}\n                    dataKey='budget'\n                    nameKey='budget'\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                >\n                    {data?.map((entry, index) => (\n                        <Cell fill={COLORS[index % COLORS.length]} key={`${entry}-${index}`} />\n                    ))}\n                </Pie>\n                <Legend verticalAlign='top' height={36} />\n            </RePieChart>\n        </ResponsiveContainer>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Drawer.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ReusableList.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/TablePlaceholder/TablePlaceholder.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/TransactionsTable.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/App.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/colors.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/RenderArrow.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Contexts/ActiveDate.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Categories/components/CategoriesTable.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Panel.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/GlobalFilter.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/types/currency.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Charts/BarChart/BarChart.tsx",["179","180"],"import React from 'react';\nimport {\n    BarChartProps,\n    ResponsiveContainer,\n    CartesianGrid,\n    XAxis,\n    Label,\n    YAxis,\n    Bar,\n    Legend,\n    Tooltip,\n    LabelProps,\n    BarChart as ReBarChart,\n    Cell,\n} from 'recharts';\nimport COLORS from '../colors';\n\ninterface ChartProps {\n    name: string;\n    budget: string;\n    actual: string;\n}\n\nexport const BarChart: React.FC<BarChartProps & LabelProps> = ({ data, value }) => {\n    const notUncategorized = data!.filter((category: any) => category.name !== 'Uncategorized');\n    return (\n        <ResponsiveContainer>\n            <ReBarChart\n                margin={{\n                    top: 20,\n                    right: 20,\n                    bottom: 20,\n                    left: 10,\n                }}\n                data={notUncategorized}\n            >\n                <CartesianGrid strokeDasharray='3 3' />\n                <XAxis dataKey='name' type='category'>\n                    {/* <Label value={value} offset={0} position='insideBottom' fill='white' /> */}\n                </XAxis>\n                <YAxis\n                    type='number'\n                    domain={[0, 500]}\n                    scale='linear'\n                    label={{\n                        value: value,\n                        angle: -90,\n                        position: 'insideBottomLeft',\n                        fill: 'white',\n                    }}\n                >\n                    {/* <Label value={value} offset={0} position='insideLeft' fill='white' /> */}\n                </YAxis>\n                <Tooltip />\n                <Legend\n                    payload={[{ value: 'budget', type: 'rect', id: 'ID02', color: '#c12929' }]}\n                />\n                <Bar dataKey='actual' shape={<CustomBarWithTarget />} isAnimationActive={true}>\n                    {data?.map((entry, index) => (\n                        <Cell fill={COLORS[index % COLORS.length]} key={`${entry}-${index}`} />\n                    ))}\n                </Bar>\n            </ReBarChart>\n        </ResponsiveContainer>\n    );\n};\n\nconst CustomBarWithTarget = (props: any) => {\n    const { fill, x, y, width, height, budget, actual } = props;\n    let totalHeight = y + height;\n    let targetY = totalHeight - (height / actual) * budget;\n\n    return (\n        <svg>\n            <rect x={x} y={y} width={width} height={height} stroke='none' fill={fill} />\n            <line\n                x1={x - 8}\n                x2={x + (width + 8)}\n                y1={targetY}\n                y2={targetY}\n                stroke={'#c12929'}\n                strokeWidth={4}\n                // strokeDasharray={'10 5'}\n            />\n        </svg>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/ReusableNav.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/LoggedOutNav.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/index.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/apollo-link.ts",["181","182"],"import { getAccessToken, setAccessToken } from './accessToken';\nimport { ApolloLink, Observable, HttpLink } from '@apollo/client';\nimport { TokenRefreshLink } from 'apollo-link-token-refresh';\nimport JwtDecode from 'jwt-decode';\nimport { onError } from 'apollo-link-error';\nimport { JwtToken } from './types/jwt';\n\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    if (accessToken) {\n                        operation.setContext({\n                            headers: {\n                                authorization: `Bearer ${accessToken}`,\n                            },\n                        });\n                    }\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        })\n);\n\nconst URL = `${process.env.REACT_APP_API_URL}/graphql`;\n\nexport const link = ApolloLink.from([\n    new TokenRefreshLink({\n        accessTokenField: 'accessToken',\n        isTokenValidOrUndefined: () => {\n            const token = getAccessToken();\n\n            if (!token) {\n                return true;\n            }\n\n            try {\n                const { exp } = JwtDecode(token) as JwtToken;\n                if (Date.now() >= exp * 1000) {\n                    return false;\n                } else {\n                    return true;\n                }\n            } catch {\n                return false;\n            }\n        },\n        fetchAccessToken: () => {\n            return fetch(`${process.env.REACT_APP_API_URL}/refresh_token`, {\n                method: 'POST',\n                credentials: 'include',\n            });\n        },\n        handleFetch: accessToken => {\n            setAccessToken(accessToken);\n        },\n        handleError: err => {\n            throw new Error(err.name);\n        },\n    }) as any, // TODO: Figure why this is needed\n    onError(({ graphQLErrors, networkError }) => {\n        console.log('graphQLErrors', graphQLErrors);\n        console.log('network error', networkError);\n    }),\n    requestLink,\n    new HttpLink({\n        uri: URL,\n        credentials: 'include',\n    }),\n]);\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/cache.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/Contexts/ProvideAuth.tsx",["183"],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Register.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/SignIn.tsx",["184"],"import React, { Fragment, useState } from 'react';\nimport { useSignInMutation } from '../generated/graphql';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { setAccessToken } from '../accessToken';\nimport { LoggedOutNav } from '../components/LoggedOutNav';\nimport { Paper, Button, TextField, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface Props {}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: '10px',\n        marginTop: theme.spacing(6),\n    },\n    input: {\n        paddingBottom: '5px',\n    },\n}));\n\nexport const SignIn: React.FC<RouteComponentProps> = ({ history }) => {\n    const classes = useStyles();\n    const [signIn] = useSignInMutation();\n    const [error, setError] = useState('');\n\n    return (\n        <Fragment>\n            <LoggedOutNav />\n            <Container maxWidth='sm' className={classes.root}>\n                <Paper elevation={5}>\n                    <Formik\n                        initialValues={{\n                            password: '',\n                            username: '',\n                        }}\n                        onSubmit={async (values, { setSubmitting }) => {\n                            const { username, password } = values;\n                            try {\n                                const response = await signIn({\n                                    variables: {\n                                        username,\n                                        password,\n                                    },\n                                });\n                                history.push('/');\n                                response &&\n                                    response.data &&\n                                    setAccessToken(response.data.signIn.accessToken);\n                            } catch (err) {\n                                setError(err.message);\n                            }\n                        }}\n                    >\n                        {({ handleSubmit, isSubmitting }) => (\n                            <Container className={classes.root}>\n                                <Form onSubmit={handleSubmit}>\n                                    <Field\n                                        as={TextField}\n                                        name='username'\n                                        placeholder='username'\n                                        variant='outlined'\n                                        fullWidth\n                                        className={classes.input}\n                                        error={!!error}\n                                    />\n                                    <Field\n                                        as={TextField}\n                                        name='password'\n                                        placeholder='password'\n                                        type='password'\n                                        variant='outlined'\n                                        fullWidth\n                                        className={classes.input}\n                                        error={!!error}\n                                        helperText={error}\n                                    />\n                                    <Button\n                                        variant='contained'\n                                        type='submit'\n                                        disabled={isSubmitting}\n                                        color='primary'\n                                        fullWidth\n                                    >\n                                        Sign In\n                                    </Button>\n                                </Form>\n                            </Container>\n                        )}\n                    </Formik>\n                </Paper>\n            </Container>\n        </Fragment>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/hooks/use-state-with-local-storage.ts",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/generated/graphql.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/PrimaryList.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/LoggedInNav.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/DashboardContext.tsx",["185","186"],"import React, { useState, useContext } from 'react';\nimport {\n    Typography,\n    Select,\n    makeStyles,\n    createStyles,\n    Theme,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    useMediaQuery,\n    useTheme,\n} from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\nimport {\n    useSumDebitsByYearMonthQuery,\n    YearMonth,\n    useListAvailableMonthQuery,\n} from '../generated/graphql';\nimport { ActiveDateContext, updateActiveDate } from '../Contexts/ActiveDate';\nimport { Panel } from './Panel/Panel';\n\ninterface Props {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            justifyContent: 'space-around',\n        },\n        date: {\n            paddingRight: theme.spacing(1),\n        },\n        icon: {\n            fontSize: '6rem',\n        },\n        dateContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            // justifyContent: 'space-around',\n        },\n    })\n);\n\nexport const DashboardContext: React.FC<Props> = () => {\n    const classes = useStyles();\n    const { data, loading, error } = useListAvailableMonthQuery();\n    const {\n        store: { activeDate },\n    } = useContext(ActiveDateContext);\n\n    const matches = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n\n    if (!data?.getYearMonth[0]?.year) return null;\n\n    if (!activeDate.month || !activeDate.year) return null;\n\n    const { year, month } = activeDate;\n\n    const monthName = dayjs()\n        .month(month - 1)\n        .format(matches ? 'MMMM' : 'MMM');\n\n    if (loading || error) return null;\n\n    return (\n        <Panel icon={<DateRangeOutlinedIcon className={classes.icon} color='secondary' />}>\n            <div className={classes.root}>\n                <div className={classes.dateContainer}>\n                    <Typography className={classes.date} variant='h4' color='primary'>\n                        {monthName}\n                    </Typography>\n                    <Typography className={classes.date} variant='h4' color='secondary'>\n                        {year}\n                    </Typography>\n                </div>\n\n                <SelectDate\n                    year={year}\n                    month={month}\n                    dates={data.getYearMonth}\n                    disabled={!data?.getYearMonth[0]?.year}\n                />\n            </div>\n        </Panel>\n    );\n};\n\nconst useFormStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        select: {\n            fontSize: 25,\n        },\n    })\n);\n\nconst SelectDate: React.FC<{\n    year: number;\n    month: number;\n    dates?: YearMonth[];\n    disabled?: boolean;\n}> = ({ month, year, dates, disabled }) => {\n    const classes = useFormStyles();\n    const [activeDate, setActiveDate] = useState(`${month}/${year}`);\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const valueToString = event.target.value as string;\n        const date = valueToString.split('/');\n        setActiveDate(event.target.value as string);\n        dispatch({\n            type: updateActiveDate,\n            payload: { month: parseInt(date[0]), year: parseInt(date[1]) },\n        });\n    };\n\n    const { dispatch } = useContext(ActiveDateContext);\n\n    return (\n        <FormControl>\n            <InputLabel shrink id='month-year'>\n                Month / Year\n            </InputLabel>\n            <Select\n                value={activeDate}\n                onChange={handleChange}\n                className={classes.select}\n                disabled={disabled}\n            >\n                {dates?.map(({ year, month }, i) => (\n                    <MenuItem className={classes.select} key={i} value={`${month}/${year}`}>\n                        {`${month}/${year}`}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Panel/Income.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/TransactionForm/TransactionForm.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/pages/Transactions/Components/EditableCell.tsx",["187"],"import { MenuItem, Select } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { ActiveDateContext } from '../../../Contexts/ActiveDate';\nimport {\n    MonthlySpendingChartDocument,\n    SumDebitsByYearMonthDocument,\n    TransactionsByMonthAndYearDocument,\n    TransactionType,\n    useCategoriesQuery,\n    useUpdateTransactionCategoryMutation,\n} from '../../../generated/graphql';\n\ninterface EditableCellTypes {\n    cell: any;\n    row: any;\n    column: any;\n}\n\nexport const EditableCell: React.FC<EditableCellTypes> = ({\n    cell: { value: initialValue },\n    row: { original },\n    column,\n}) => {\n    const { data } = useCategoriesQuery();\n    const [updateCategory] = useUpdateTransactionCategoryMutation();\n    const [value, setValue] = useState(initialValue);\n\n    const [categoryId, setCategoryId] = useState(0);\n\n    const {\n        store: { activeDate },\n    } = useContext(ActiveDateContext);\n\n    const onBlur = () => {\n        updateCategory({\n            variables: {\n                id: original.id,\n                categoryId,\n            },\n            refetchQueries: [\n                {\n                    query: TransactionsByMonthAndYearDocument,\n                    variables: {\n                        year: activeDate?.year,\n                        month: activeDate?.month,\n                        transactionType: TransactionType.Debit,\n                    },\n                },\n                {\n                    query: MonthlySpendingChartDocument,\n                    variables: {\n                        year: activeDate?.year,\n                        month: activeDate?.month,\n                    },\n                },\n            ],\n        });\n    };\n\n    const onChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(e.target.value as number);\n    };\n\n    useEffect(() => {\n        setValue(initialValue);\n    }, [initialValue]);\n    // TODO: fix below, shouldn't need !\n    useEffect(() => {\n        data?.getCategories\n            .filter(({ name }) => name === value)\n            .map(({ id }) => setCategoryId(Number(id))); //  TODO: This is bad\n    }, [data, value]);\n\n    return (\n        <Select onBlur={onBlur} onChange={onChange} name='category' value={value}>\n            {data?.getCategories.map(({ id, name }) => (\n                <MenuItem value={name} key={name}>\n                    {name}\n                </MenuItem>\n            ))}\n        </Select>\n    );\n};\n","/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/ReusableTable.tsx",[],"/home/ovieh/Documents/projects/budget/packages/budget-frontend/src/components/Table/TableToolbar.tsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":44,"column":25,"nodeType":"194","messageId":"195","endLine":44,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":50,"column":21,"nodeType":"194","messageId":"195","endLine":50,"endColumn":32},{"ruleId":"196","severity":1,"message":"197","line":10,"column":5,"nodeType":"198","messageId":"199","endLine":10,"endColumn":12},{"ruleId":"196","severity":1,"message":"200","line":7,"column":5,"nodeType":"198","messageId":"199","endLine":7,"endColumn":10},{"ruleId":"196","severity":1,"message":"201","line":18,"column":11,"nodeType":"198","messageId":"199","endLine":18,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":75,"column":9,"nodeType":"194","messageId":"195","endLine":75,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":76,"column":9,"nodeType":"194","messageId":"195","endLine":76,"endColumn":20},{"ruleId":"196","severity":1,"message":"202","line":1,"column":44,"nodeType":"198","messageId":"199","endLine":1,"endColumn":53},{"ruleId":"196","severity":1,"message":"203","line":10,"column":11,"nodeType":"198","messageId":"199","endLine":10,"endColumn":16},{"ruleId":"196","severity":1,"message":"204","line":12,"column":5,"nodeType":"198","messageId":"199","endLine":12,"endColumn":13},{"ruleId":"196","severity":1,"message":"205","line":17,"column":5,"nodeType":"198","messageId":"199","endLine":17,"endColumn":33},{"ruleId":"196","severity":1,"message":"206","line":6,"column":5,"nodeType":"198","messageId":"199","endLine":6,"endColumn":33},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'ChartProps' is defined but never used.","'useEffect' is defined but never used.","'Props' is defined but never used.","'useTheme' is defined but never used.","'useSumDebitsByYearMonthQuery' is defined but never used.","'SumDebitsByYearMonthDocument' is defined but never used.","no-global-assign","no-unsafe-negation"]